# Generated by Django 4.0.4 on 2022-07-04 06:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BacklogRegistrationSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegNo', models.IntegerField()),
                ('RollNo', models.IntegerField()),
                ('Name', models.CharField(max_length=70)),
                ('AYear', models.IntegerField()),
                ('ASem', models.IntegerField()),
                ('BYear', models.IntegerField()),
                ('BSem', models.IntegerField()),
                ('Dept', models.IntegerField()),
                ('Regulation', models.IntegerField()),
                ('RegisteredSubjects', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'BacklogRegistrationSummaryV',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BranchChanges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegNo', models.IntegerField()),
                ('RollNo', models.IntegerField()),
                ('CurrentDept', models.IntegerField()),
                ('NewDept', models.IntegerField()),
                ('AYear', models.IntegerField()),
            ],
            options={
                'db_table': 'BranchChanges',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CancelledSeatGrades',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegId', models.IntegerField()),
                ('RegEventId', models.IntegerField()),
                ('Regulation', models.IntegerField()),
                ('Grade', models.CharField(max_length=2)),
                ('AttGrade', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'CancelledSeatGrades',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CancelledSeatRegistrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegNo', models.IntegerField()),
                ('RegEventId', models.IntegerField()),
                ('Mode', models.IntegerField()),
                ('sub_id', models.IntegerField()),
            ],
            options={
                'db_table': 'CancelledSeatRegistrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CancelledStudentInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegNo', models.IntegerField()),
                ('RollNo', models.IntegerField()),
                ('Name', models.CharField(max_length=70)),
                ('Regulation', models.IntegerField()),
                ('Dept', models.IntegerField()),
                ('Gender', models.CharField(max_length=10)),
                ('Category', models.CharField(max_length=20)),
                ('GaurdianName', models.CharField(max_length=50)),
                ('Phone', models.IntegerField()),
                ('email', models.CharField(max_length=50)),
                ('Address1', models.CharField(max_length=150)),
                ('Address2', models.CharField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'CancelledStudentInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurrentAcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AcademicYear', models.IntegerField()),
            ],
            options={
                'db_table': 'CurrentAcademicYear',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DroppedRegularCourses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'DroppedRegularCourses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FacultyAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Section', models.CharField(default='NA', max_length=2)),
            ],
            options={
                'db_table': 'FacultyAssignment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FacultyInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FacultyId', models.IntegerField(default=100)),
                ('Name', models.CharField(max_length=100)),
                ('Phone', models.IntegerField()),
                ('Email', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'FacultyInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GradeChallenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegId', models.IntegerField()),
                ('PreviousGrade', models.CharField(max_length=2)),
                ('UpdatedGrade', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'GradeChallenge',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GradePoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Regulation', models.IntegerField()),
                ('Grade', models.CharField(max_length=2)),
                ('Points', models.IntegerField()),
            ],
            options={
                'db_table': 'GradePoints',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MakeupRegistrationSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegNo', models.IntegerField()),
                ('RollNo', models.IntegerField()),
                ('Name', models.CharField(max_length=70)),
                ('AYear', models.IntegerField()),
                ('ASem', models.IntegerField()),
                ('BYear', models.IntegerField()),
                ('BSem', models.IntegerField()),
                ('Dept', models.IntegerField()),
                ('Regulation', models.IntegerField()),
                ('RegisteredSubjects', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'MakeupRegistrationSummaryV',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MakeupSummaryStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SubName', models.CharField(max_length=100)),
                ('SubCode', models.CharField(max_length=10)),
                ('Dept', models.IntegerField()),
                ('Regulation', models.IntegerField()),
                ('BYear', models.IntegerField()),
                ('Passed', models.IntegerField()),
                ('Failed', models.IntegerField()),
                ('Total', models.IntegerField()),
            ],
            options={
                'db_table': 'MakeupSummaryStatsV',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MandatoryCredits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Regulation', models.IntegerField()),
                ('Dept', models.IntegerField()),
                ('BYear', models.IntegerField()),
                ('Credits', models.IntegerField()),
            ],
            options={
                'db_table': 'MandatoryCredits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotPromoted',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AYear', models.IntegerField()),
                ('BYear', models.IntegerField()),
                ('Regulation', models.IntegerField()),
                ('PoA', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'NotPromoted',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotRegistered',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'NotRegistered',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProgrammeModel',
            fields=[
                ('PID', models.IntegerField(primary_key=True, serialize=False)),
                ('ProgrammeName', models.CharField(max_length=20)),
                ('ProgrammeType', models.CharField(max_length=10)),
                ('Specialization', models.CharField(max_length=100)),
                ('Dept', models.IntegerField()),
            ],
            options={
                'db_table': 'Departments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegistrationStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AYear', models.IntegerField()),
                ('ASem', models.IntegerField()),
                ('BYear', models.IntegerField()),
                ('BSem', models.IntegerField()),
                ('Regulation', models.IntegerField()),
                ('Dept', models.IntegerField()),
                ('Mode', models.CharField(max_length=1)),
                ('Status', models.IntegerField()),
            ],
            options={
                'db_table': 'Registration_Status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegularRegistrationSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegNo', models.IntegerField()),
                ('RollNo', models.IntegerField()),
                ('Name', models.CharField(max_length=70)),
                ('AYear', models.IntegerField()),
                ('ASem', models.IntegerField()),
                ('BYear', models.IntegerField()),
                ('BSem', models.IntegerField()),
                ('Dept', models.IntegerField()),
                ('Regulation', models.IntegerField()),
                ('RegisteredSubjects', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'RegularRegistrationSummaryV',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Regulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AdmissionYear', models.IntegerField()),
                ('AYear', models.IntegerField()),
                ('BYear', models.IntegerField()),
                ('Regulation', models.IntegerField()),
            ],
            options={
                'db_table': 'Regulation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegulationChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PreviousRegulation', models.IntegerField()),
                ('PresentRegulation', models.IntegerField()),
            ],
            options={
                'db_table': 'RegulationChange',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RollLists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Cycle', models.IntegerField(choices=[(10, 'PHYSICS'), (9, 'CHEMISTRY')], default=0)),
                ('Section', models.CharField(default='NA', max_length=2)),
            ],
            options={
                'db_table': 'RollLists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RollLists_Staging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Cycle', models.IntegerField(choices=[(10, 'PHYSICS'), (9, 'CHEMISTRY')], default=0)),
                ('Section', models.CharField(default='NA', max_length=2)),
            ],
            options={
                'db_table': 'RollLists_Staging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeatCancellationInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegNo', models.IntegerField()),
                ('RollNo', models.IntegerField()),
                ('Name', models.CharField(max_length=70)),
                ('Regulation', models.IntegerField()),
                ('Dept', models.IntegerField()),
                ('AdmissionYear', models.IntegerField()),
                ('Gender', models.CharField(max_length=10)),
                ('Category', models.CharField(max_length=20)),
                ('GuardianName', models.CharField(max_length=50)),
                ('Phone', models.IntegerField()),
                ('email', models.CharField(max_length=50)),
                ('Address1', models.CharField(max_length=150)),
                ('Address2', models.CharField(max_length=100, null=True)),
                ('Cycle', models.IntegerField(choices=[(10, 'PHYSICS'), (9, 'CHEMISTRY')], default=0)),
                ('cancelled_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'SeatCancellationInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentBacklogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegNo', models.IntegerField()),
                ('RollNo', models.IntegerField()),
                ('sub_id', models.IntegerField()),
                ('SubCode', models.CharField(max_length=10)),
                ('SubName', models.CharField(max_length=50)),
                ('OfferedYear', models.IntegerField()),
                ('Dept', models.IntegerField()),
                ('Credits', models.IntegerField()),
                ('BYear', models.IntegerField()),
                ('BSem', models.IntegerField()),
                ('Grade', models.CharField(max_length=2)),
                ('GP', models.IntegerField()),
                ('Regulation', models.IntegerField()),
                ('AYASBYBS', models.IntegerField()),
            ],
            options={
                'db_table': 'StudentBacklogsMV',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentCancellation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegNo', models.IntegerField()),
                ('AYear', models.IntegerField()),
                ('ASem', models.IntegerField()),
                ('SubCode', models.CharField(max_length=10)),
                ('OfferedYear', models.IntegerField()),
                ('Dept', models.IntegerField()),
                ('Regulation', models.IntegerField()),
                ('Grade', models.CharField(max_length=2)),
                ('AttGrade', models.CharField(max_length=2, null=True)),
            ],
            options={
                'db_table': 'StudentCancellation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentGradePoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegNo', models.IntegerField()),
                ('sub_id', models.IntegerField()),
                ('SubCode', models.CharField(max_length=10)),
                ('SubName', models.CharField(max_length=100)),
                ('AYear', models.IntegerField()),
                ('ASem', models.IntegerField()),
                ('BYear', models.IntegerField()),
                ('BSem', models.IntegerField()),
                ('OfferedYear', models.IntegerField()),
                ('Dept', models.IntegerField()),
                ('Grade', models.CharField(max_length=2)),
                ('AttGrade', models.CharField(max_length=2)),
                ('Regulation', models.IntegerField()),
                ('Creditable', models.IntegerField()),
                ('Credits', models.IntegerField()),
                ('Type', models.CharField(max_length=10)),
                ('Category', models.CharField(max_length=10)),
                ('Points', models.IntegerField()),
                ('GP', models.IntegerField()),
                ('AYASBYBS', models.IntegerField()),
            ],
            options={
                'db_table': 'StudentGradePointsMV',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentGrades',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegId', models.IntegerField()),
                ('RegEventId', models.IntegerField()),
                ('Regulation', models.IntegerField()),
                ('Grade', models.CharField(max_length=2)),
                ('AttGrade', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'StudentGrades',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentGrades_Staging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegId', models.IntegerField()),
                ('RegEventId', models.IntegerField()),
                ('Regulation', models.IntegerField()),
                ('Grade', models.CharField(max_length=2)),
                ('AttGrade', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'StudentGrades_Staging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegNo', models.IntegerField()),
                ('RollNo', models.IntegerField()),
                ('Name', models.CharField(max_length=70)),
                ('Regulation', models.IntegerField()),
                ('Dept', models.IntegerField()),
                ('AdmissionYear', models.IntegerField()),
                ('Gender', models.CharField(max_length=10)),
                ('Category', models.CharField(max_length=20)),
                ('GuardianName', models.CharField(max_length=50)),
                ('Phone', models.IntegerField()),
                ('email', models.CharField(max_length=50)),
                ('Address1', models.CharField(max_length=150)),
                ('Address2', models.CharField(max_length=100, null=True)),
                ('Cycle', models.IntegerField(choices=[(10, 'PHYSICS'), (9, 'CHEMISTRY')], default=0)),
            ],
            options={
                'db_table': 'StudentInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentMakeupBacklogsVsRegistrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegNo', models.IntegerField()),
                ('RollNo', models.IntegerField()),
                ('Name', models.CharField(max_length=70)),
                ('BYear', models.IntegerField()),
                ('BSem', models.IntegerField()),
                ('Dept', models.IntegerField()),
                ('MakeupSubjects', models.CharField(max_length=300)),
                ('RegisteredSubjects', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'StudentMakeupBacklogsVsRegistrationsV',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentMakeups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegNo', models.IntegerField()),
                ('RollNo', models.IntegerField()),
                ('sub_id', models.IntegerField()),
                ('SubCode', models.CharField(max_length=10)),
                ('SubName', models.CharField(max_length=50)),
                ('OfferedYear', models.IntegerField()),
                ('Dept', models.IntegerField()),
                ('Credits', models.IntegerField()),
                ('BYear', models.IntegerField()),
                ('BSem', models.IntegerField()),
                ('Grade', models.CharField(max_length=2)),
                ('GP', models.IntegerField()),
                ('Regulation', models.IntegerField()),
                ('AYASBYBS', models.IntegerField()),
            ],
            options={
                'db_table': 'StudentMakeupBacklogsMV',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentRegistrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegNo', models.IntegerField()),
                ('RegEventId', models.IntegerField()),
                ('Mode', models.IntegerField()),
                ('sub_id', models.IntegerField()),
            ],
            options={
                'db_table': 'StudentRegistrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentRegistrations_Staging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegNo', models.IntegerField()),
                ('RegEventId', models.IntegerField()),
                ('Mode', models.IntegerField()),
                ('sub_id', models.IntegerField()),
            ],
            options={
                'db_table': 'StudentRegistrations_Staging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubjectFacultyInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SubId', models.IntegerField()),
                ('Section', models.CharField(max_length=10)),
                ('FacultyId', models.IntegerField()),
            ],
            options={
                'db_table': 'SubjectFacultyInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SubCode', models.CharField(max_length=10)),
                ('SubName', models.CharField(max_length=100)),
                ('Creditable', models.IntegerField()),
                ('Credits', models.IntegerField()),
                ('OfferedBy', models.IntegerField()),
                ('Type', models.CharField(max_length=10)),
                ('Category', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'Subjects',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subjects_Staging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SubCode', models.CharField(max_length=10)),
                ('SubName', models.CharField(max_length=100)),
                ('Creditable', models.IntegerField()),
                ('Credits', models.IntegerField()),
                ('Type', models.CharField(max_length=10)),
                ('Category', models.CharField(max_length=10)),
                ('OfferedBy', models.IntegerField()),
            ],
            options={
                'db_table': 'Subjects_Staging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Faculty_user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UserId', models.IntegerField()),
                ('AssignDate', models.DateField(auto_now_add=True)),
                ('RevokeDate', models.DateField()),
                ('Faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SupExamDBRegistrations.facultyinfo')),
            ],
            options={
                'db_table': 'Faculty_user',
                'managed': True,
            },
        ),
    ]
